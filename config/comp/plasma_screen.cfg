shader 0 compositeplasmagunscreen [
    attribute vec4 vvertex;
    attribute vec2 vtexcoord0;
    uniform mat4 hudmatrix;
    varying vec2 texcoord0;

    void main(void)
    {
        gl_Position = hudmatrix * vvertex;
        texcoord0 = vtexcoord0;
    }
] [
    const vec3 color = vec3(0.25, 0.975, 0.78125);
    uniform vec4 params;
    uniform float millis;
    varying vec2 texcoord0;

    fragdata(0) vec4 fragcolor;

    void main()
    {
        float a = 1.0;
        fragcolor = vec4(0.0);
        if (texcoord0.y<0.45) {
            a = clamp(50.0*(texcoord0.x-params.x), 0.0, 1.0);
            a = max(a, clamp(50.0*(abs(texcoord0.y-0.2)-0.15), 0.0, 1.0));
        } else if (texcoord0.x<0.45) {
            if (params.z==1) {
                // Shooting.
                float w = clamp(100.0*(abs(0.55*fract(texcoord0.x-0.5*abs(texcoord0.y-0.75)+2.0*millis))-0.05), 0.0, 1.0);
                fragcolor.rgb = (1.0-w)*vec3(1.0);
            } else if (params.z==2) {
                // Clip empty.
                float w = clamp(100.0*(min(abs(texcoord0.x+texcoord0.y-1.0), abs(texcoord0.x-texcoord0.y+0.5))-0.05), 0.0, 1.0);
                fragcolor.rgb = (1.0-w)*vec3(1.0);
            } else if (params.z==3) {
                // Reloading.
                vec2 p = texcoord0-vec2(0.24,0.75);
                float r2 = p.x*p.x + p.y*p.y;
                float angle = atan(p.y/p.x);
                float w = clamp(100.0*(angle/3.14159 - (1.0-2.0*fract(millis))), 0.0, 1.0);
                w = max(w, clamp(100.0*(abs(r2-0.0475)-0.01), 0.0, 1.0));
                fragcolor.rgb = (1.0-w)*vec3(1.0);
            } else if (params.z==4) {
                // Cooking.
                float w = clamp(100.0*(abs(0.55*(texcoord0.x-0.5*abs(texcoord0.y-0.75)-0.2))-0.2*abs(1.0-2.0*fract(2.0*millis))), 0.0, 1.0);
                fragcolor.rgb = (1.0-w)*vec3(1.0);
            }
        } else {
            vec2 p = texcoord0-vec2(1.0,1.0);
            float r2 = p.x*p.x + p.y*p.y;
            float angle = atan(p.y/p.x);
            float w = clamp(100.0*(abs(r2-0.27)-0.005), 0.0, 1.0);
            a = clamp(50.0*(angle/1.5708 - params.y), 0.0, 1.0);
            a = max(a, clamp(50.0*(r2-0.25), 0.0, 1.0));
            fragcolor.rgb = (1.0-w)*vec3(1.0);
        }
        fragcolor = vec4(a*fragcolor.rgb + (1.0-a)*color, 1.0);

        a = clamp(100.0*(abs(texcoord0.y-0.02)-0.005), 0.0, 1.0);
        fragcolor.rgb = a*fragcolor.rgb + (1.0-a)*vec3(1.0);
        a = clamp(100.0*(abs(texcoord0.y-0.38)-0.005), 0.0, 1.0);
        fragcolor.rgb = a*fragcolor.rgb + (1.0-a)*vec3(1.0);
    }
]

newcompui plasmagunscreen [
    @(deflocal fontname "dotmatrix")
    @(setlocal params [0.5 0.5 0 0])
    uistyle clampxy
    uicomp compositeplasmagunscreen 1 1 [
        uicompparam params (divf (getclientweapclip $ui_hud_focus 6) $plasmaammoclip) (divf (getclientweapstore $ui_hud_focus 6) $plasmaammostore) (getclientweapstate $ui_hud_focus 6) $params4
    ]
    uifont $fontname [
        uistyle clampxy
        uistyle centermiddle
        uitext (getclientweapclip $ui_hud_focus 6) 16.0 [uistyle righttop; uitextlimit 0.9]
    ]
]
